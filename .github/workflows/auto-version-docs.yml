name: Auto version docs on release
on:
  push:
    # tags: ["v*.*.*"]


jobs:
  Version-Docs:
    environment: Testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v3
        with:
          go-version-file: src/go.mod

      - name: Generate CLI Docs
        working-directory: ./src
        run: |
          go run ./cmd/mdgen/mdgen.go generate

      # migrate generated md files into /website/docs/cli
      - name: Move CLI .md to Docs
        run: |
          mkdir -p ./website/docs/cli
          mv ./src/cmd/mdgen/cli_markdown/* ./website/docs/cli/
          rm -R ./src/cmd/mdgen/cli_markdown/

      - name: Install dependencies for website lint
        run: |
          wget https://github.com/errata-ai/vale/releases/download/v2.20.2/vale_2.20.2_Linux_64-bit.tar.gz # NOTE: update in Dockerfile when updating
          mkdir bin && tar -xvzf vale_2.20.2_Linux_64-bit.tar.gz -C bin
          echo "$PWD/bin" >> $GITHUB_PATH
          npm i -g markdownlint-cli@0.32.2 # NOTE: update in Dockerfile when updating

      - name: Run website lint
        run: |
          cd website && make -o genclidocs localcheck

      - name: Create new version of docs
        run: |
          set -xe
          cd website
          # export VERSION="$(git describe --exact-match --tags $(git rev-parse HEAD))"
          export VERSION="testing"
          npm ci
          npm run docusaurus docs:version "$VERSION"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: Add new version to versioned docs
          title: Add new version to versioned docs
          body: Creates a new versioned set of docs for the latest release to `versioned_docs`.
          branch: versioned-docs-update

      - name: Build website
        env:
          CORSO_VERSION: ${{ needs.SetEnv.outputs.version }}
        run: |
          cd website &&
            npm ci &&
            npm run build

      - uses: actions/upload-artifact@master
        name: Upload website as artifacts
        with:
          name: website
          path: website/build
